#!/bin/sh
### BEGIN INIT INFO
# Provides:          PHPCI
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

NONE='\033[00m'
RED='\033[01;31m'
CYAN='\033[01;36m'
WHITE='\033[01;37m'
UNDERLINE='\033[4m'

dir="/home/phpci/"
cmd="php ./daemonise phpci:daemonise"
user="root"

name=`basename $0`
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

icon="ðŸ”¥ "

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "$icon $name already started..."
    else
        echo "$icon Starting $name..."
        cd "$dir"
        if [ -z "$user" ]; then
            sudo $cmd >> "$stdout_log" 2>> "$stderr_log" &
        else
            sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
        fi
        echo $! > "$pid_file"
        if ! is_running; then
            echo "$icon Unable to start $name, see $stdout_log and $stderr_log..."
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "$icon Stopping $name..."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "$icon $name not stopped; may still be shutting down or shutdown may have failed..."
            exit 1
        else
            echo "$icon $name not running..."
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "$icon $name not running..."
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "$icon Unable to stop $name, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        PID=$(get_pid)
        echo "$icon $name is running using PID $PID..."
    else
        echo "$icon $name not running..."
        exit 1
    fi
    ;;
    *)
    echo -e "${RED}${UNDERLINE}Usage:${NONE} $0 {start|stop|restart|status}"
    echo -e "${CYAN}${UNDERLINE}Name: $name${NONE}"
    echo -e "Paths:\n   ${WHITE}pid_file: $pid_file\n   stdout_log: $stdout_log\n   stderr_log: $stderr_log${NONE}"

    exit 1
    ;;
esac

exit 0
